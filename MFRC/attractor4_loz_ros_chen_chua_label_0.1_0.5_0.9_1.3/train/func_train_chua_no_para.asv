function [rmse,rmse_basin,rmse_dynamic]  = func_train_chua_no_para(hyperpara_set,train_data,rng_num,testdata)
%%
%load duff_trandata_n.mat duff_trandata_n
%load test_data.mat test_data
%data_num=6;
%load train_data.mat
rng(rng_num);
drive_num=10;
c3=33;
test_num=size(test_data,1)/3;
data_num=test_num;
%%
eig_rho =hyperpara_set(1);
W_in_a = hyperpara_set(2);
a = hyperpara_set(3);
reg = hyperpara_set(4);
density =hyperpara_set(5);
resSize =500; % size of the reservoir nodes;  
initLen = 10;
trainLen =2000;
test_Len = 500;
testLen=300;
inSize = 3; 
outSize = 3;
%%
  indata=train_data;
  X = zeros(2*resSize,TrainLen);
  %X = zeros(resSize,TrainLen);
  Yt = indata(:,2:TrainLen+1);% run the reservoir with the data and collect X
%%
Win = (2.0*rand(resSize,inSize)-1.0)*W_in_a;
WW = zeros(resSize,resSize);
for i=1:resSize
    for j=i:resSize
            if (rand()<density)
             WW(i,j)=(2.0*rand()-1.0);
             WW(j,i)=WW(i,j);
            end
    end
end
rhoW = eigs(WW,1);
W = WW .* (eig_rho /rhoW); 
x = zeros(resSize,1);
for t = 1:TrainLen
    u = indata(:,t);
    x = (1-a)*x + a*tanh( Win*u + W*x );
    X(:,t) = [x;x.^2];
    %X(:,t) = x;
end

Data_len=[0,data_len];
for i=0:data_num-1
   trainLen=sum(Data_len(1:i+1));
   X(:,trainLen+1-i*initLen:trainLen+initLen-i*initLen)=[];
   Yt(:,trainLen+1-i*initLen:trainLen+initLen-i*initLen)=[];
end
rank=randperm( size(X,2) );  
X=X(:, rank); 
Yt=Yt(:, rank); 
X_T = X';
Wout = Yt*X_T / (X*X_T + reg*eye(2*resSize));
%%
Y1= zeros(outSize,testLen);
rmse_dynamic=0;  
Delta=zeros(testnum,testLen);
Delta(:,1)=1;
I=eye(resSize);
for i=0:testnum-1
    delta=zeros(resSize,1);
    delta(1)=1;
    x1=zeros(resSize,1);
     u(1,1)=test_data(3*(i+1)-2,1);
    u(2,1)=test_data(3*(i+1)-1,1);
    u(3,1)=test_data(3*(i+1),1);
    Y1(:,1)=u;
for t = 1:test_Len-1 
    df_tanh=1-tanh( Win*u + W*x1 ).*tanh( Win*u + W*x1 );
    Df_tanh=repmat(df_tanh,1,resSize);
    df_x1=(1-a)*I+a*W.*Df_tanh;
    x1 = (1-a)*x1 + a*tanh( Win*u + W*x1 );
    y = Wout*[x1;x1.^2];
    %y = Wout*x1;
    Y1(:,t+1) = y;
     if t<drive_num
    u(1,1)=test_data(3*(i+1)-2,1+t);
     u(2,1)=test_data(3*(i+1)-1,1+t);
     u(3,1)=test_data(3*(i+1),1+t);
    else
    u = y;   
     end  
    delta=df_x1*delta;
    %Delta(t+1)=sqrt(sum(delta.*delta))/Delta(t);
    Delta(i+1,t+1)=sqrt(sum(delta.*delta));
end
rmse_dynamic=rmse_dynamic+mean(abs(Y1(2,1:testLen)...
    -testdata(2*i+2,1:testLen)))+mean(abs(Y1(1,1:testLen)...
    -testdata(2*i+1,1:testLen)));
end
Delta_mean=sum(Delta,1)/testnum;
rmse_memory=Delta_mean(drive_num)*10^2;
rmse_dynamic=rmse_dynamic/testnum;
rmse=rmse_memory+rmse_dynamic;
if isnan(rmse)
    rmse=10;
end
